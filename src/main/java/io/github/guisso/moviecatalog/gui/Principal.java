/*
 * CC BY-NC-SA 4.0
 *
 * Copyright 2022 Luis Guisso &lt;luis dot guisso at ifnmg dot edu dot br&gt;.
 *
 * Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)
 *
 * You are free to:
 *   Share - copy and redistribute the material in any medium or format
 *   Adapt - remix, transform, and build upon the material
 *
 * Under the following terms:
 *   Attribution - You must give appropriate credit, provide 
 *   a link to the license, and indicate if changes were made.
 *   You may do so in any reasonable manner, but not in any 
 *   way that suggests the licensor endorses you or your use.
 *   NonCommercial - You may not use the material for commercial purposes.
 *   ShareAlike - If you remix, transform, or build upon the 
 *   material, you must distribute your contributions under 
 *   the same license as the original.
 *   No additional restrictions - You may not apply legal 
 *   terms or technological measures that legally restrict 
 *   others from doing anything the license permits.
 *
 * Notices:
 *   You do not have to comply with the license for elements 
 *   of the material in the public domain or where your use 
 *   is permitted by an applicable exception or limitation.
 *   No warranties are given. The license may not give you 
 *   all of the permissions necessary for your intended use. 
 *   For example, other rights such as publicity, privacy, 
 *   or moral rights may limit how you use the material.
 */
package io.github.guisso.moviecatalog.gui;

import io.github.guisso.moviecatalog.genre.GenreRegistration;
import io.github.guisso.moviecatalog.movie.MovieRegistration;
import io.github.guisso.moviecatalog.movie.MoviesByGenreRegistration;
import java.beans.PropertyVetoException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;

/**
 *
 * @author Luis Guisso &lt;luis dot guisso at ifnmg dot edu dot br&gt;
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrPrincipal = new javax.swing.JScrollPane();
        dskPrincipal = new javax.swing.JDesktopPane();
        mnuBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileAbout = new javax.swing.JMenuItem();
        sepMnuFile001 = new javax.swing.JPopupMenu.Separator();
        mnuFileExit = new javax.swing.JMenuItem();
        mnuRegistration = new javax.swing.JMenu();
        mnuRegistrationGenre = new javax.swing.JMenuItem();
        mnuRegistrationMovie = new javax.swing.JMenuItem();
        mnuRegistrationMoviesByGenre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("System XYZ");

        scrPrincipal.setViewportView(dskPrincipal);

        javax.swing.GroupLayout dskPrincipalLayout = new javax.swing.GroupLayout(dskPrincipal);
        dskPrincipal.setLayout(dskPrincipalLayout);
        dskPrincipalLayout.setHorizontalGroup(
            dskPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        dskPrincipalLayout.setVerticalGroup(
            dskPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
        );

        scrPrincipal.setViewportView(dskPrincipal);

        mnuBar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        mnuFile.setText("File");
        mnuFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        mnuFileAbout.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mnuFileAbout.setText("About");
        mnuFileAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileAboutActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileAbout);
        mnuFile.add(sepMnuFile001);

        mnuFileExit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mnuFileExit.setText("Exit");
        mnuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileExit);

        mnuBar.add(mnuFile);

        mnuRegistration.setText("Registration");
        mnuRegistration.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        mnuRegistrationGenre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mnuRegistrationGenre.setText("Genre");
        mnuRegistrationGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRegistrationGenreActionPerformed(evt);
            }
        });
        mnuRegistration.add(mnuRegistrationGenre);

        mnuRegistrationMovie.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mnuRegistrationMovie.setText("Movie");
        mnuRegistrationMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRegistrationMovieActionPerformed(evt);
            }
        });
        mnuRegistration.add(mnuRegistrationMovie);

        mnuRegistrationMoviesByGenre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mnuRegistrationMoviesByGenre.setText("Movies by Genre");
        mnuRegistrationMoviesByGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRegistrationMoviesByGenreActionPerformed(evt);
            }
        });
        mnuRegistration.add(mnuRegistrationMoviesByGenre);

        mnuBar.add(mnuRegistration);

        setJMenuBar(mnuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrPrincipal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrPrincipal)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuFileExitActionPerformed

    private void mnuRegistrationGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRegistrationGenreActionPerformed
        attachInternalFrame(GenreRegistration.getInstance());
    }//GEN-LAST:event_mnuRegistrationGenreActionPerformed

    private void mnuRegistrationMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRegistrationMovieActionPerformed
        attachInternalFrame(MovieRegistration.getInstance());
    }//GEN-LAST:event_mnuRegistrationMovieActionPerformed

    private void mnuFileAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileAboutActionPerformed
        attachInternalFrame(About.getInstance());
    }//GEN-LAST:event_mnuFileAboutActionPerformed

    private void mnuRegistrationMoviesByGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRegistrationMoviesByGenreActionPerformed
        attachInternalFrame(MoviesByGenreRegistration.getInstance());
    }//GEN-LAST:event_mnuRegistrationMoviesByGenreActionPerformed

    private void attachInternalFrame(JInternalFrame window) {
        // Attach internal window to desktop pane
        if (!window.isVisible()) {
            window.setVisible(true);
            dskPrincipal.add(window);
        }

        // Focus and restore the internal window
        try {
            window.setSelected(true);
            window.setIcon(false);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(Principal.class.getName())
                    .log(Level.INFO, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Principal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane dskPrincipal;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileAbout;
    private javax.swing.JMenuItem mnuFileExit;
    private javax.swing.JMenu mnuRegistration;
    private javax.swing.JMenuItem mnuRegistrationGenre;
    private javax.swing.JMenuItem mnuRegistrationMovie;
    private javax.swing.JMenuItem mnuRegistrationMoviesByGenre;
    private javax.swing.JScrollPane scrPrincipal;
    private javax.swing.JPopupMenu.Separator sepMnuFile001;
    // End of variables declaration//GEN-END:variables
}
