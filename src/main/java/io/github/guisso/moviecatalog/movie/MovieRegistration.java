/*
 * CC BY-NC-SA 4.0
 *
 * Copyright 2022 Luis Guisso &lt;luis dot guisso at ifnmg dot edu dot br&gt;.
 *
 * Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)
 *
 * You are free to:
 *   Share - copy and redistribute the material in any medium or format
 *   Adapt - remix, transform, and build upon the material
 *
 * Under the following terms:
 *   Attribution - You must give appropriate credit, provide 
 *   a link to the license, and indicate if changes were made.
 *   You may do so in any reasonable manner, but not in any 
 *   way that suggests the licensor endorses you or your use.
 *   NonCommercial - You may not use the material for commercial purposes.
 *   ShareAlike - If you remix, transform, or build upon the 
 *   material, you must distribute your contributions under 
 *   the same license as the original.
 *   No additional restrictions - You may not apply legal 
 *   terms or technological measures that legally restrict 
 *   others from doing anything the license permits.
 *
 * Notices:
 *   You do not have to comply with the license for elements 
 *   of the material in the public domain or where your use 
 *   is permitted by an applicable exception or limitation.
 *   No warranties are given. The license may not give you 
 *   all of the permissions necessary for your intended use. 
 *   For example, other rights such as publicity, privacy, 
 *   or moral rights may limit how you use the material.
 */
package io.github.guisso.moviecatalog.movie;

import io.github.guisso.moviecatalog.genre.Genre;
import io.github.guisso.moviecatalog.genre.GenreDao;
import io.github.guisso.moviecatalog.genre.GenreRegistration;
import java.awt.Component;
import java.awt.SystemColor;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Luis Guisso &lt;luis dot guisso at ifnmg dot edu dot br&gt;
 */
public class MovieRegistration extends javax.swing.JInternalFrame {

    private static MovieRegistration instance;

    private static final DefaultComboBoxModel<Genre> boxModel
            = new DefaultComboBoxModel<>();

    //<editor-fold defaultstate="collapsed" desc="Constructor">
    /**
     * Creates new form MovieRegistration
     */
    private MovieRegistration() {
        initComponents();

        cboGenre.setModel(boxModel);
        cboGenre.setRenderer(new GenreRenderer());

        // Very first access have not items
        try {
            cboGenre.setSelectedIndex(0);
        } catch (Exception ex) {
            System.out.println(">> " + ex.getMessage());
        }

        // Set the default year of the movie
        fmtYear.setValue(LocalDate.now().getYear());

        // Set the codes for the radio buttons
        // radFree.setActionCommand("F"); ... rad18.setActionCommand("18+");
        radFree.setActionCommand(Movie.Rate.Free.getCode());
        rad10.setActionCommand(Movie.Rate.Age10.getCode());
        rad12.setActionCommand(Movie.Rate.Age12.getCode());
        rad14.setActionCommand(Movie.Rate.Age14.getCode());
        rad16.setActionCommand(Movie.Rate.Age16.getCode());
        rad18.setActionCommand(Movie.Rate.Adult.getCode());
    }
    //</editor-fold>

    public static MovieRegistration getInstance() {
        if (instance == null) {
            instance = new MovieRegistration();
        }

        genresReload();

        return instance;
    }

    public static void genresReload() {
        // Reload new data and update the combo box
        try {
            int selectedIdx = boxModel
                    .getIndexOf(boxModel.getSelectedItem());
            boxModel.removeAllElements();
            boxModel.addAll(new GenreDao().findAll());
            boxModel.setSelectedItem(boxModel.getElementAt(selectedIdx));
        } catch (Exception ex) {
            System.out.println(">> " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpRate = new javax.swing.ButtonGroup();
        pnlPrincipal = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblRate = new javax.swing.JLabel();
        lblGenre = new javax.swing.JLabel();
        txtTitle = new io.github.guisso.moviecatalog.util.MyJTextField();
        fmtYear = new javax.swing.JFormattedTextField();
        radFree = new javax.swing.JRadioButton();
        rad10 = new javax.swing.JRadioButton();
        rad12 = new javax.swing.JRadioButton();
        rad14 = new javax.swing.JRadioButton();
        rad16 = new javax.swing.JRadioButton();
        rad18 = new javax.swing.JRadioButton();
        cboGenre = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Movie");

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTitle.setText("Title:");

        lblYear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblYear.setText("Year:");

        lblRate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRate.setText("Rate:");

        lblGenre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGenre.setText("Genre:");

        txtTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTitle.setMaxLength(40);

        try {
            fmtYear.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fmtYear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        grpRate.add(radFree);
        radFree.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radFree.setSelected(true);
        radFree.setText("Free");

        grpRate.add(rad10);
        rad10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rad10.setText("10");

        grpRate.add(rad12);
        rad12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rad12.setText("12");

        grpRate.add(rad14);
        rad14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rad14.setText("14");

        grpRate.add(rad16);
        rad16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rad16.setText("16");

        grpRate.add(rad18);
        rad18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rad18.setText("18+");

        cboGenre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrincipalLayout = new javax.swing.GroupLayout(pnlPrincipal);
        pnlPrincipal.setLayout(pnlPrincipalLayout);
        pnlPrincipalLayout.setHorizontalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle)
                    .addGroup(pnlPrincipalLayout.createSequentialGroup()
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRate)
                            .addComponent(lblGenre)
                            .addComponent(lblYear))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboGenre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                                .addComponent(radFree)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rad10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rad12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rad14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rad16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rad18))
                            .addComponent(txtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fmtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlPrincipalLayout.setVerticalGroup(
            pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblYear)
                    .addComponent(fmtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRate)
                    .addComponent(radFree)
                    .addComponent(rad10)
                    .addComponent(rad12)
                    .addComponent(rad14)
                    .addComponent(rad16)
                    .addComponent(rad18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGenre)
                    .addComponent(cboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            new MovieDao().saveOrUpdate(new Movie(null,
                    txtTitle.getText(),
                    Short.valueOf(fmtYear.getValue().toString()),
                    Movie.castStringToRate(grpRate.getSelection().getActionCommand()),
                    (Genre) boxModel.getSelectedItem()
            ));
        } catch (Exception ex) {
            Logger.getLogger(GenreRegistration.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Record not saved.\nCheck the data or the network connection and try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }

        clear();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void clear() {
        txtTitle.setText(null);
        txtTitle.requestFocus();
        fmtYear.setValue(LocalDate.now().getYear());
        radFree.setSelected(true);
    }

    // Custom render (name vs !toString) for Gender on combo box
    private class GenreRenderer
            extends JLabel
            implements ListCellRenderer<Genre> {

        @Override
        public Component getListCellRendererComponent(
                JList<? extends Genre> list, Genre value,
                int index, boolean isSelected, boolean cellHasFocus) {
            if (value == null) {
                return this;
            }

            setOpaque(true);
            setForeground(SystemColor.textText);
            setBackground(SystemColor.text);
            if (isSelected) {
                setForeground(SystemColor.textHighlightText);
                setBackground(SystemColor.textHighlight);
            }

            // The value to be rendered on the combo box
            setText(value.getName());

            setBorder(BorderFactory.createEmptyBorder(0, 5, 1, 1));
            return this;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<Genre> cboGenre;
    private javax.swing.JFormattedTextField fmtYear;
    private javax.swing.ButtonGroup grpRate;
    private javax.swing.JLabel lblGenre;
    private javax.swing.JLabel lblRate;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblYear;
    private javax.swing.JPanel pnlPrincipal;
    private javax.swing.JRadioButton rad10;
    private javax.swing.JRadioButton rad12;
    private javax.swing.JRadioButton rad14;
    private javax.swing.JRadioButton rad16;
    private javax.swing.JRadioButton rad18;
    private javax.swing.JRadioButton radFree;
    private io.github.guisso.moviecatalog.util.MyJTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
